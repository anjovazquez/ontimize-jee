<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.ontimize.com/schema/beans" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:beans="http://www.springframework.org/schema/beans" targetNamespace="http://www.ontimize.com/schema/beans"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.2.xsd" />

	<xsd:element name="ontimize-configuration">
		<xsd:annotation>
			<xsd:documentation>
				Ontimize server services general configuration.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<!-- <xsd:attribute name="lenient" type="xsd:boolean"/> -->
					<xsd:choice minOccurs="0" maxOccurs="unbounded">
						<xsd:element ref="security" minOccurs="0" maxOccurs="1" />
						<xsd:element ref="remote-operation" minOccurs="0" maxOccurs="1" />
						<xsd:element ref="remote-preferences" minOccurs="0" maxOccurs="1" />
						<xsd:element ref="remote-i18n" minOccurs="0" maxOccurs="1" />
						<xsd:element ref="mail" minOccurs="0" maxOccurs="1" />
					</xsd:choice>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<!-- REMOTE OPERATION -->
	<xsd:element name="remote-operation">
		<xsd:annotation>
			<xsd:documentation>
				Configure remote operations.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="max-parallel-threads" type="xsd:integer" default="10" />
		</xsd:complexType>
	</xsd:element>
	
<!-- 	<xsd:element name="dms-engine"> -->
<!-- 		<xsd:complexType> -->
<!-- 			<xsd:sequence> -->
<!-- 				<xsd:element name="documentsBasePath" minOccurs="1" maxOccurs="1"> -->
<!-- 					<xsd:complexType> -->
<!-- 						<xsd:group ref="propertyResolverGroup"></xsd:group> -->
<!-- 					</xsd:complexType> -->
<!-- 				</xsd:element> -->
<!-- 			</xsd:sequence> -->
<!-- 		</xsd:complexType> -->
<!-- 	</xsd:element>	 -->

	<!-- SECURITY AUTHORIZATION AND AUTHENTICATION -->

	<xsd:element name="security">
		<xsd:annotation>
			<xsd:documentation>
				Configure security.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="user-information-service" maxOccurs="1" minOccurs="1" />
				<xsd:element ref="user-role-information-service" maxOccurs="1" minOccurs="1" />
				<xsd:element ref="role-information-service" maxOccurs="1" minOccurs="1" />
				<xsd:element ref="authorization" maxOccurs="1" minOccurs="0" />
			</xsd:sequence>

		</xsd:complexType>
	</xsd:element>

	<xsd:element name="user-information-service">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
						<xsd:choice minOccurs="1" maxOccurs="unbounded">
							<xsd:element ref="beans:bean" />
							<xsd:element ref="beans:ref" />
							<xsd:element ref="beans:idref" />
							<xsd:element ref="beans:value" />
							<xsd:element ref="database-user-information-service" />
							<!-- <xsd:any minOccurs="0" /> -->
						</xsd:choice>
					<xsd:attribute name="scope" type="xsd:string" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="database-user-information-service">
		<xsd:complexType>
			<xsd:attribute name="ref-user-repository" type="xsd:string" use="required" />
			<xsd:attribute name="query-id" type="xsd:string" use="required" />
			<xsd:attribute name="user-login-column" type="xsd:string" use="required" />
			<xsd:attribute name="user-password-column" type="xsd:string" use="optional" />
			<xsd:attribute name="user-need-check-pass-column" type="xsd:string" use="optional" />			
			<xsd:attribute name="other-data" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="user-role-information-service">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
						<xsd:choice minOccurs="1" maxOccurs="unbounded">
							<xsd:element ref="beans:bean" />
							<xsd:element ref="beans:ref" />
							<xsd:element ref="beans:idref" />
							<xsd:element ref="beans:value" />
							<xsd:element ref="database-user-role-information-service" />
							<!-- <xsd:any minOccurs="0" /> -->
						</xsd:choice>
					<xsd:attribute name="scope" type="xsd:string" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="database-user-role-information-service">
		<xsd:complexType>
			<xsd:attribute name="ref-user-role-repository" type="xsd:string" use="required" />
			<xsd:attribute name="query-id" type="xsd:string" use="required" />
			<xsd:attribute name="user-login-column" type="xsd:string" use="required" />
			<xsd:attribute name="role-name-column" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="role-information-service">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
						<xsd:choice minOccurs="1" maxOccurs="unbounded">
							<xsd:element ref="beans:bean" />
							<xsd:element ref="beans:ref" />
							<xsd:element ref="beans:idref" />
							<xsd:element ref="beans:value" />
							<xsd:element ref="database-role-information-service" />
							<!-- <xsd:any minOccurs="0" /> -->
						</xsd:choice>
					<xsd:attribute name="scope" type="xsd:string" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="database-role-information-service">
		<xsd:complexType>
			<xsd:attribute name="ref-role-repository" type="xsd:string" use="required" />
			<xsd:attribute name="role-name-column" type="xsd:string" use="required" />
			<xsd:attribute name="server-permission-query-id" type="xsd:string" use="required" />
			<xsd:attribute name="server-permission-name-column" type="xsd:string" use="required" />
			<xsd:attribute name="client-permission-query-id" type="xsd:string" use="optional" />
			<xsd:attribute name="client-permission-column" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>
	

	<xsd:element name="authorization">
		<xsd:complexType>
				<xsd:choice>
					<xsd:element ref="beans:bean" />
					<xsd:element ref="beans:ref" />
					<xsd:element ref="beans:idref" />
					<xsd:element ref="beans:value" />
					<xsd:element ref="default-authorizator"/>
					<!-- <xsd:any minOccurs="0" /> -->
				</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="default-authorizator">
	</xsd:element>

	<!-- REMOTE PREFERENCES -->
	<xsd:element name="file-remote-preference-engine">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="path" minOccurs="1" maxOccurs="1">
					<xsd:complexType>
						<xsd:group ref="property-resolver-group"></xsd:group>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>


	<xsd:element name="database-remote-preference-engine">
		<xsd:complexType>
			<xsd:attribute name="ref-repository" type="xsd:string" use="required" />
			<xsd:attribute name="user-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="preference-name-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="preference-value-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="query-id" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="remote-preferences">
		<xsd:annotation>
			<xsd:documentation>
				Configure remote preferences.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="beans:bean" />
					<xsd:element ref="beans:ref" />
					<xsd:element ref="beans:idref" />
					<xsd:element ref="beans:value" />
					<xsd:element ref="file-remote-preference-engine" />
					<xsd:element ref="database-remote-preference-engine" />
					<!-- <xsd:any minOccurs="0" /> -->
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<!-- REMOTE I18N -->
	
	<xsd:element name="database-i18n">
		<xsd:complexType>
			<xsd:attribute name="ref-bundle-repository" type="xsd:string" use="required" />
			<xsd:attribute name="ref-bundle-value-repository" type="xsd:string" use="required" />
			<xsd:attribute name="bundle-key-column" type="xsd:string" use="required" />
			<xsd:attribute name="bundle-class-name-column" type="xsd:string" use="required" />
			<xsd:attribute name="bundle-description-column" type="xsd:string" use="required" />
			<xsd:attribute name="bundle-value-key-column" type="xsd:string" use="required" />
			<xsd:attribute name="bundle-value-text-key-column" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="remote-i18n">
		<xsd:annotation>
			<xsd:documentation>
				Configure remote translations.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="i18n-engine">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="beans:bean" />
								<xsd:element ref="beans:ref" />
								<xsd:element ref="beans:idref" />
								<xsd:element ref="beans:value" />
								<xsd:element ref="database-i18n" />
								<!-- <xsd:any minOccurs="0" /> -->
							</xsd:choice>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- MAIL -->
	<xsd:element name="default-mail-configurator">
		<xsd:complexType>
			<xsd:attribute name="ref-repository" type="xsd:string" use="required" />
			<xsd:attribute name="filter-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="value-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="query-id" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-encoding" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-host" type="xsd:string" use="required" />
			<xsd:attribute name="filter-column-value-port" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-protocol" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-user" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-password" type="xsd:string" use="optional" />
			<xsd:attribute name="filter-column-value-javamail-properties" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="mail">
		<xsd:annotation>
			<xsd:documentation>
				Configure mail.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="default-mail-engine">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="beans:bean" />
								<xsd:element ref="beans:ref" />
								<xsd:element ref="beans:idref" />
								<xsd:element ref="beans:value" />
								<xsd:element ref="default-mail-configurator" />
								<!-- <xsd:any minOccurs="0" /> -->
							</xsd:choice>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	
	<!-- REPORT -->
	<xsd:element name="default-report-compiler">
	</xsd:element>
	
	<xsd:element name="default-report-filler">
	</xsd:element>
	
	<xsd:element name="compiler">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
						<xsd:choice minOccurs="1" maxOccurs="unbounded">
							<xsd:element ref="beans:bean" />
							<xsd:element ref="beans:ref" />
							<xsd:element ref="beans:idref" />
							<xsd:element ref="beans:value" />
							<xsd:element ref="default-report-compiler" />
							<!-- <xsd:any minOccurs="0" /> -->
						</xsd:choice>
					<xsd:attribute name="scope" type="xsd:string" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="filler">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
						<xsd:choice minOccurs="1" maxOccurs="unbounded">
							<xsd:element ref="beans:bean" />
							<xsd:element ref="beans:ref" />
							<xsd:element ref="beans:idref" />
							<xsd:element ref="beans:value" />
							<xsd:element ref="default-report-filler" />
							<!-- <xsd:any minOccurs="0" /> -->
						</xsd:choice>
					<xsd:attribute name="scope" type="xsd:string" />
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="report">
		<xsd:annotation>
			<xsd:documentation>
				Configure report store.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="default-report-engine">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="base-path" minOccurs="1" maxOccurs="1">
								<xsd:complexType>
									<xsd:group ref="property-resolver-group"></xsd:group>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="compiler" maxOccurs="1" minOccurs="0" />
							<xsd:element ref="filler" maxOccurs="1" minOccurs="0" />
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- OTHER -->

	<xsd:element name="database-property">
		<xsd:annotation>
			<xsd:documentation>
				Get a property from database.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="ref-repository" type="xsd:string" use="required" />
			<xsd:attribute name="value-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="filter-column-name" type="xsd:string" use="required" />
			<xsd:attribute name="filter-column-value" type="xsd:string" use="required" />
			<xsd:attribute name="query-id" type="xsd:string" use="optional" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="fixed-property">
		<xsd:annotation>
			<xsd:documentation>
				Establish a fixed property.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="value" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:group name="limited-type">
		<xsd:sequence>
			<xsd:choice minOccurs="1" maxOccurs="unbounded">
				<xsd:element ref="beans:bean" />
				<xsd:element ref="beans:ref" />
				<xsd:element ref="beans:idref" />
				<xsd:element ref="beans:value" />
				<xsd:any minOccurs="0" />
			</xsd:choice>
		</xsd:sequence>
	</xsd:group>

	<xsd:group name="property-resolver-group">
		<xsd:sequence>
			<xsd:choice minOccurs="1" maxOccurs="unbounded">
				<xsd:element ref="beans:bean" />
				<xsd:element ref="beans:ref" />
				<xsd:element ref="beans:idref" />
				<xsd:element ref="beans:value" />
				<xsd:element ref="database-property" />
				<xsd:element ref="fixed-property" />
			</xsd:choice>
		</xsd:sequence>
	</xsd:group>

<xsd:element name="cors">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	Configure cross origin requests processing.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="mapping" minOccurs="1" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
	Enable cross origin requests processing on the specified path pattern.
	By default, all origins, GET HEAD POST methods, all headers and credentials
	are allowed and max age is set to 30 minutes.
						]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="path" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	A path into the application that should handle CORS requests.
	Exact path mapping URIs (such as "/admin") are supported as well as Ant-stype path patterns (such as /admin/**).
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="allowed-origins" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	Comma-separated list of origins to allow, e.g. "http://domain1.com, http://domain2.com".
	The special value "*" allows all domains (default).
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="allowed-methods" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	Comma-separated list of HTTP methods to allow, e.g. "GET, POST".
	The special value "*" allows all method.
	By default GET, HEAD and POST methods are allowed.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="allowed-headers" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	Comma-separated list of headers that a pre-flight request can list as allowed for use during an actual request.
	The special value of "*" allows actual requests to send any header (default).
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="exposed-headers" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	Comma-separated list of response headers other than simple headers (i.e.
	Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma) that an
	actual response might have and can be exposed.
	Empty by default.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="allow-credentials" type="xsd:boolean">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	Whether user credentials are supported (true by default).
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="max-age" type="xsd:long">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
	How long, in seconds, the response from a pre-flight request can be cached by clients.
	1800 seconds (30 minutes) by default.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>